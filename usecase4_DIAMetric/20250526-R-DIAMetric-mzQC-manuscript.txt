library(ggplot2)

# First, the TSV version of the code

SWATHs = read.table("DIAMetric-byIsolationWindow.tsv", sep="\t", header=T, row.names=NULL, quote="")
ggplot(data=SWATHs, aes(x=LoMZ, y=TIC50ileRT, group=SourceFile)) + geom_line(aes(color=SourceFile)) + ylim(0,130) + xlab("lower m/z bound of isolation window") + ylab("retention time at which half of TIC was measured") + theme(legend.position="none") + ggtitle("Dependence of TIC accumulation on SWATH window m/z") 
ggsave(filename="TICbySWATH.svg",width=6, height=6);
ggsave(filename="TICbySWATH.png",width=6, height=6);

ggplot(data=SWATHs, aes(x=LoMZ, y=TotalTIC, group=SourceFile)) + geom_line(aes(color=SourceFile)) + xlab("lower m/z bound of isolation window") + ylab("TotalTIC") + theme(legend.position="none") + ggtitle("Dependence of TIC accumulation on SWATH window m/z") 


# Second, the mzQC JSON version of the code

library(rmzqc)

SWATHs = readMZQC("DIAMetric.mzqc.json")
NumberOfRuns = length(SWATHs$runQualities)
SWATH.df = data.frame()

for (RunIndex in 1:NumberOfRuns) {
    SourceFile = SWATHs$runQualities[[RunIndex]]$metadata$inputFiles[[1]]$name;
    TheseTargetMzs = SWATHs$runQualities[[RunIndex]]$qualityMetrics[[17]]$value;
    TheseRTatTICQuartiles = SWATHs$runQualities[[RunIndex]]$qualityMetrics[[24]]$value;
    TheseTICs = SWATHs$runQualities[[RunIndex]]$qualityMetrics[[25]]$value;
    for (SWATHIndex in 1:length(TheseTargetMzs)) {
    	Temp.df = data.frame(SourceFile, TheseTargetMzs[[SWATHIndex]], TheseRTatTICQuartiles[[SWATHIndex]][[2]], TheseTICs[[SWATHIndex]])
    	SWATH.df = rbind(SWATH.df,Temp.df);
    }
}
names(SWATH.df) = c("SourceFile", "TargetMZ", "TIC50ileRT", "TotalTIC")

ggplot(data=SWATH.df, aes(x=TargetMZ, y=TIC50ileRT, group=SourceFile)) + geom_line(aes(color=SourceFile)) + ylim(0,130) + xlab("target m/z of isolation window") + ylab("retention time at which half of TIC was measured") + theme(legend.position="none") + ggtitle("Dependence of TIC accumulation on SWATH window m/z") 
